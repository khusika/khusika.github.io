#!/usr/bin/env bash
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (C) 2023 Khusika Dhamar Gusti

RED="\033[01;31m"
YLW="\033[01;33m"
RST="\033[0m"

if ! [ -x "$(command -v clang-16)" ]; then
  echo -e "${RED}Build failed: ${YLW}Unsupported C and C++ compiler version, please use clang-16.${RST}";
  exit;
fi

if [ "$(go env GOOS)" = "linux" ] || [ "$(go env GOOS)" = "android" ] && [ "$(go env GOARCH)" = "amd64" ] || [ "$(go env GOARCH)" = "arm64" ]; then
  if [ -f "./src/go.mod" ]; then
      echo -e "${RED}Hugo source exist, ${YLW}checking out with the latest patch...${RST}";
      (cd src && git fetch origin master && git checkout -f origin/master && cd ../);
    else
      echo -e "${RED}Hugo source does not exist, ${YLW}cloning the repository...${RST}";
      (git clone https://github.com/gohugoio/hugo -b master src);
  fi
  echo -e "${YLW}Applying patch...${RST}";
  (cd src && git apply --stat ../patch/*.patch && cd ../);
  echo -e "${YLW}Building hugo binary...${RST}";
  (go clean -C src && export CGO_ENABLED="1" AR="llvm-ar-16" CC="clang-16" CXX="clang++-16" && go build -C src -ldflags="-s -w -X github.com/gohugoio/hugo/common/hugo.vendorInfo=khusika.dev" --tags extended -o "../bin/$(go env GOARCH)/hugo");
  if [ -x "$(command -v upx)" ]; then
    (upx --best --lzma "./bin/$(go env GOARCH)/hugo");
  else
    echo -e "${RED}Build failed: ${YLW}\e]8;;https://upx.github.io\aUPX\e]8;;\a does not exist.";
    (git restore "./bin/$(go env GOARCH)");
    exit;
  fi
else
  echo -e "${RED}Build failed: ${YLW}Detected $(go env GOOS)/$(go env GOARCH), unsupported OS and Arch version.${RST}";
  exit;
fi